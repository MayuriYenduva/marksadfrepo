{
	"name": "funwithexpr2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "MoviesD2",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "CreateValues"
				},
				{
					"name": "FileName"
				},
				{
					"name": "SplitName"
				},
				{
					"name": "Enumeration"
				}
			],
			"script": "source(output(\n\t\tmovie as string,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as string,\n\t\tRating as string,\n\t\tRottenTomato as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 derive(fname = '/myfiles/2020/updates/filename.csv',\n\t\tfullname = 'Kromer, Mark A.',\n\t\tregioncode = 1) ~> CreateValues\nCreateValues derive(finalfilename = split(filter(split(fname,'/'), endsWith(#item,'.csv'))[1],'.')[1]) ~> FileName\nFileName derive(firstname = left(split(fullname,',')[2],length(split(fullname,',')[2])-3),\n\t\tlastname = split(fullname,',')[1],\n\t\tmiddleinit = substring(split(fullname,',')[2],length(split(fullname,',')[2])-1,1)) ~> SplitName\nSplitName derive(regionname = case (\r\n    \r\n    regioncode == 1, 'Northeast',\r\n    regioncode == 2, 'Central',\r\n    regioncode == 3, 'Mountain',\r\n    regioncode == 4, 'West'\r\n       \r\n    \r\n    )) ~> Enumeration\nEnumeration sink(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tkeys:['movie'],\n\tstore: 'cache',\n\tformat: 'inline',\n\tsaveOrder: 1) ~> sink1"
		}
	}
}