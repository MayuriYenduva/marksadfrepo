{
	"name": "UpdateSnow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "Snowflake1",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "AlterRow1"
				},
				{
					"name": "SetRating"
				}
			],
			"script": "source(output(\n\t\tmovie as decimal(38,0),\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as decimal(38,0),\n\t\tRating as decimal(38,0),\n\t\tRottenTomato as decimal(38,0)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\ttableName: 'newmovies',\n\tschemaName: 'public',\n\tstore: 'snowflake') ~> source1\nsource1 alterRow(updateIf(year == 1986),\n\tdeleteIf(year < 1980)) ~> AlterRow1\nAlterRow1 derive(Rating = 10) ~> SetRating\nSetRating sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:true,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['movie','title'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}