{
	"name": "CDMDataFlow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Excel1",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "source2"
				},
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorage4",
						"type": "LinkedServiceReference"
					},
					"schemaLinkedService": {
						"referenceName": "AzureDataLakeStorage4",
						"type": "LinkedServiceReference"
					},
					"name": "source3"
				},
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorage4",
						"type": "LinkedServiceReference"
					},
					"name": "source4"
				},
				{
					"dataset": {
						"referenceName": "Loans",
						"type": "DatasetReference"
					},
					"name": "source5"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "folderout",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorage4",
						"type": "LinkedServiceReference"
					},
					"schemaLinkedService": {
						"referenceName": "AzureDataLakeStorage4",
						"type": "LinkedServiceReference"
					},
					"name": "sink2"
				},
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorage4",
						"type": "LinkedServiceReference"
					},
					"schemaLinkedService": {
						"referenceName": "AzureDataLakeStorage4",
						"type": "LinkedServiceReference"
					},
					"name": "sink3"
				}
			],
			"transformations": [],
			"script": "source(output(\n\t\tSalesID as double,\n\t\tAmounts as double,\n\t\tQuantity as double,\n\t\tCountry as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource(output(\n\t\tSalesID as double,\n\t\tAmounts as double,\n\t\tQuantity as double,\n\t\tCountry as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'excel',\n\tcontainer: 'mycontainer',\n\tfolderPath: 'SampleData',\n\tfileName: 'currencysales.xlsx',\n\tsheetName: 'currencysales1',\n\tfirstRowAsHeader: true) ~> source2\nsource(output(\n\t\tfinancialActivityId as string,\n\t\tmainAccountCategoryKey as string,\n\t\tmainAccountKey as string,\n\t\tcompanyKey as string,\n\t\ttransactionCurrencyKey as string,\n\t\tfiscalCalendarPeriodKey as string,\n\t\tledgerDimensionDisplayValue as string,\n\t\ttransactionCurrencyCode as string,\n\t\taccountingCurrencyAmount as string,\n\t\taccountingDate as string,\n\t\tledgerId as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: true,\n\tentity: 'FinancialActivity.cdm.json/FinancialActivity',\n\tformat: 'cdm',\n\tmanifestType: 'manifest',\n\tmanifestName: '_allImports.cdm.json',\n\tentityPath: 'manifests/core/applicationCommon',\n\tcorpusPath: 'CDM-master/schemaDocuments/core/applicationCommon/foundationCommon/financialCommon',\n\tcorpusStore: 'adlsgen2',\n\tadlsgen2_fileSystem: 'mycontainer',\n\tfolderPath: 'CDM-master/schemaDocuments',\n\tfileSystem: 'mycontainer') ~> source3\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tentity: 'account',\n\tformat: 'cdm',\n\tmanifestType: 'model',\n\tfolderPath: 'account',\n\tfileSystem: 'mycontainer') ~> source4\nsource(output(\n\t\tid as string,\n\t\tmember_id as string,\n\t\tloan_amnt as string,\n\t\tfunded_amnt as string,\n\t\tfunded_amnt_inv as string,\n\t\tterm as string,\n\t\tint_rate as string,\n\t\tinstallment as string,\n\t\tgrade as string,\n\t\tsub_grade as string,\n\t\temp_title as string,\n\t\temp_length as string,\n\t\thome_ownership as string,\n\t\tannual_inc as string,\n\t\tverification_status as string,\n\t\tissue_d as string,\n\t\tloan_status as string,\n\t\tpymnt_plan as string,\n\t\turl as string,\n\t\tdesc as string,\n\t\tpurpose as string,\n\t\ttitle as string,\n\t\tzip_code as string,\n\t\taddr_state as string,\n\t\tdti as string,\n\t\tdelinq_2yrs as string,\n\t\tearliest_cr_line as string,\n\t\tinq_last_6mths as string,\n\t\tmths_since_last_delinq as string,\n\t\tmths_since_last_record as string,\n\t\topen_acc as string,\n\t\tpub_rec as string,\n\t\trevol_bal as string,\n\t\trevol_util as string,\n\t\ttotal_acc as string,\n\t\tinitial_list_status as string,\n\t\tout_prncp as string,\n\t\tout_prncp_inv as string,\n\t\ttotal_pymnt as string,\n\t\ttotal_pymnt_inv as string,\n\t\ttotal_rec_prncp as string,\n\t\ttotal_rec_int as string,\n\t\ttotal_rec_late_fee as string,\n\t\trecoveries as string,\n\t\tcollection_recovery_fee as string,\n\t\tlast_pymnt_d as string,\n\t\tlast_pymnt_amnt as string,\n\t\tnext_pymnt_d as string,\n\t\tlast_credit_pull_d as string,\n\t\tcollections_12_mths_ex_med as string,\n\t\tmths_since_last_major_derog as string,\n\t\tpolicy_code as string,\n\t\tapplication_type as string,\n\t\tannual_inc_joint as string,\n\t\tdti_joint as string,\n\t\tverification_status_joint as string,\n\t\tacc_now_delinq as string,\n\t\ttot_coll_amt as string,\n\t\ttot_cur_bal as string,\n\t\topen_acc_6m as string,\n\t\topen_il_6m as string,\n\t\topen_il_12m as string,\n\t\topen_il_24m as string,\n\t\tmths_since_rcnt_il as string,\n\t\ttotal_bal_il as string,\n\t\til_util as string,\n\t\topen_rv_12m as string,\n\t\topen_rv_24m as string,\n\t\tmax_bal_bc as string,\n\t\tall_util as string,\n\t\ttotal_rev_hi_lim as string,\n\t\tinq_fi as string,\n\t\ttotal_cu_tl as string,\n\t\tinq_last_12m as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source5\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1\nsource3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tfinancialActivityId as string,\n\t\tmainAccountCategoryKey as string,\n\t\tmainAccountKey as string,\n\t\tcompanyKey as string,\n\t\ttransactionCurrencyKey as string,\n\t\tfiscalCalendarPeriodKey as string,\n\t\tledgerDimensionDisplayValue as string,\n\t\ttransactionCurrencyCode as string,\n\t\taccountingCurrencyAmount as string,\n\t\taccountingDate as string,\n\t\tledgerId as string\n\t),\n\tentity: 'FinancialActivity.cdm.json/FinancialActivity',\n\tformat: 'cdm',\n\tmanifestType: 'manifest',\n\tentityPath: 'core/applicationCommon/foundationCommon',\n\tmanifestName: '_allImports.cdm.json',\n\tfolderPath: 'CDM-master/schemaDocuments/manifests',\n\tfileSystem: 'mycontainer',\n\tcolumnDelimiter: ',',\n\tcolumnNamesAsHeader: false,\n\tcorpusPath: 'CDM-master/schemaDocuments/core/applicationCommon/foundationCommon/financialCommon',\n\tcorpusStore: 'adlsgen2',\n\tadlsgen2_fileSystem: 'mycontainer',\n\ttruncate: false,\n\tmapColumn(\n\t\tfinancialActivityId,\n\t\tmainAccountCategoryKey,\n\t\tmainAccountKey,\n\t\tcompanyKey,\n\t\ttransactionCurrencyKey,\n\t\tfiscalCalendarPeriodKey,\n\t\tledgerDimensionDisplayValue,\n\t\ttransactionCurrencyCode,\n\t\taccountingCurrencyAmount,\n\t\taccountingDate,\n\t\tledgerId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink2\nsource5 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tfinancialActivityId as string,\n\t\tmainAccountCategoryKey as string,\n\t\tmainAccountKey as string,\n\t\tcompanyKey as string,\n\t\ttransactionCurrencyKey as string,\n\t\tfiscalCalendarPeriodKey as string,\n\t\tledgerDimensionDisplayValue as string,\n\t\ttransactionCurrencyCode as string,\n\t\taccountingCurrencyAmount as string,\n\t\taccountingDate as string,\n\t\tledgerId as string\n\t),\n\tentity: 'FinancialActivity.cdm.json/FinancialActivity',\n\tformat: 'cdm',\n\tmanifestType: 'manifest',\n\tfolderPath: 'CDM-master/schemaDocuments/manifests',\n\tfileSystem: 'mycontainer',\n\tcolumnDelimiter: ',',\n\tcolumnNamesAsHeader: false,\n\tcorpusPath: 'CDM-master/schemaDocuments/core/applicationCommon/foundationCommon/financialCommon',\n\tcorpusStore: 'adlsgen2',\n\tadlsgen2_fileSystem: 'mycontainer',\n\ttruncate: false,\n\tmapColumn(\n\t\tfinancialActivityId = id,\n\t\tmainAccountCategoryKey = loan_amnt,\n\t\tmainAccountKey = funded_amnt\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink3"
		}
	}
}