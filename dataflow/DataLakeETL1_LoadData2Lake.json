{
	"name": "DataLakeETL1_LoadData2Lake",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Loans2",
						"type": "DatasetReference"
					},
					"name": "CSVs"
				},
				{
					"dataset": {
						"referenceName": "moviesParquet2",
						"type": "DatasetReference"
					},
					"name": "Parquets"
				},
				{
					"dataset": {
						"referenceName": "JSONMoviesWithSchema",
						"type": "DatasetReference"
					},
					"name": "JSONs"
				},
				{
					"dataset": {
						"referenceName": "Avro1",
						"type": "DatasetReference"
					},
					"name": "Avros"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "DerivedColumn1"
				}
			],
			"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> CSVs\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> Parquets\nsource(output(\n\t\tmovies as (genres as string[], movieid as string, rating as string, title as string, year as string)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> JSONs\nsource(output(\n\t\tmovies as (movieid as string, title as string, genres as string[], year as string, rating as string),\n\t\tcast as string[],\n\t\tgenres as string[],\n\t\ttitle as string,\n\t\tyear as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Avros\nAvros derive(year = toInteger(year)) ~> DerivedColumn1"
		}
	}
}