{
	"name": "cosmosUpdate",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "cosmosMovies",
						"type": "DatasetReference"
					},
					"name": "moviesCosmos"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "cosmosMovies",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "MakeHierarchy"
				},
				{
					"name": "updatePolicy"
				}
			],
			"script": "source(output(\n\t\t{_attachments} as string,\n\t\t{_etag} as string,\n\t\t{_rid} as string,\n\t\t{_self} as string,\n\t\t{_ts} as integer,\n\t\tcustomerID as string,\n\t\tdetails as (unitPrice as double, quantity as integer, productID as integer, discount as double)[],\n\t\temployeeID as integer,\n\t\tfreight as double,\n\t\tid as string,\n\t\torderDate as string,\n\t\torderID as integer,\n\t\trequiredDate as string,\n\t\tshipAddress as (city as string, country as string, postalCode as string, region as string, street as string),\n\t\tshipName as string,\n\t\tshipVia as integer,\n\t\tshippedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tquery: 'select * from orders',\n\tformat: 'documentQuery',\n\tsystemColumns: false,\n\tthroughput: 2000) ~> moviesCosmos\nmoviesCosmos derive(movies = @(year=movies.year,\n\t\tgenres=movies.genres,\n\t\trating=movies.rating*10,\n\t\ttitle=movies.title)) ~> MakeHierarchy\nMakeHierarchy alterRow(upsertIf(true())) ~> updatePolicy\nupdatePolicy sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tformat: 'document',\n\tpartitionKey: ['/titlekey'],\n\tthroughput: 2000) ~> sink1"
		}
	}
}