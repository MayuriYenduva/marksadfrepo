{
	"name": "cosmosMovies",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "cosmosMovies",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "cosmosMovies",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "AlterRow1"
				},
				{
					"name": "Select1"
				},
				{
					"name": "Exists1"
				}
			],
			"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tquery: 'select * from c',\n\tformat: 'documentQuery',\n\tsystemColumns: false,\n\tthroughput: 2000) ~> source1\nsource1 derive(movies = @(title=movies.title,\n\t\tgenres=movies.genres,\n\t\tyear=movies.year,\n\t\trating=movies.rating)) ~> DerivedColumn1\nDerivedColumn1 alterRow(updateIf(true())) ~> AlterRow1\nAlterRow1 select(mapColumn(\n\t\tmovies\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 exists(') == ERROR_FUNCTION(',\n\tnegate:false,\n\tbroadcast: 'auto')~> Exists1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'document',\n\tpartitionKey: ['/movies/title'],\n\tthroughput: 2000) ~> sink1"
		}
	}
}